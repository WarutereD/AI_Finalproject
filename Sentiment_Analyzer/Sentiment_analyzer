import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn import svm
from sklearn.metrics import classification_report

# Load the dataset
df = pd.read_csv("Sentiment_Analyzer/dataset/Dataset_1.csv")

# Preprocess the data
df["text"] = df["text"].str.lower().str.replace('[^\w\s]','').str.strip()

# Split the dataset into training and testing sets
train_size = int(len(df) * 0.8)
train_data = df[:train_size]
test_data = df[train_size:]

# Extract features from text using TF-IDF vectorizer
vectorizer = TfidfVectorizer(min_df=5, max_df=0.8, sublinear_tf=True, use_idf=True)
train_features = vectorizer.fit_transform(train_data["text"])
test_features = vectorizer.transform(test_data["text"])

# Train the model using SVM algorithm
model = svm.SVC(kernel='linear')
model.fit(train_features, train_data["label"])

# Test the model and calculate the accuracy
predicted_labels = model.predict(test_features)
accuracy = sum(predicted_labels == test_data["label"]) / len(predicted_labels)
print("Accuracy:", accuracy)

# Print the classification report
print(classification_report(test_data["label"], predicted_labels))
